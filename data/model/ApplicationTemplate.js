/**
 * Red Hat Open Innovation Labs Console API
 * Specification for interaction between the Labs Console front-end and back-end. Additionally, this API will be used to experiment with new concepts in order to allow the Automation API (https://github.com/rht-labs/automation-api) to remain stable.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: rhc-open-innovation-labs@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PVCAssociationTemplate'), require('./Route'));
  } else {
    // Browser globals (root is window)
    if (!root.RedHatOpenInnovationLabsConsoleApi) {
      root.RedHatOpenInnovationLabsConsoleApi = {};
    }
    root.RedHatOpenInnovationLabsConsoleApi.ApplicationTemplate = factory(root.RedHatOpenInnovationLabsConsoleApi.ApiClient, root.RedHatOpenInnovationLabsConsoleApi.PVCAssociationTemplate, root.RedHatOpenInnovationLabsConsoleApi.Route);
  }
}(this, function(ApiClient, PVCAssociationTemplate, Route) {
  'use strict';




  /**
   * The ApplicationTemplate model module.
   * @module model/ApplicationTemplate
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>ApplicationTemplate</code>.
   * @alias module:model/ApplicationTemplate
   * @class
   */
  var exports = function() {
    var _this = this;

















  };

  /**
   * Constructs a <code>ApplicationTemplate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ApplicationTemplate} obj Optional instance to populate.
   * @return {module:model/ApplicationTemplate} The populated <code>ApplicationTemplate</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Integer');
      }
      if (data.hasOwnProperty('base_image')) {
        obj['base_image'] = ApiClient.convertToType(data['base_image'], 'String');
      }
      if (data.hasOwnProperty('base_image_tag')) {
        obj['base_image_tag'] = ApiClient.convertToType(data['base_image_tag'], 'String');
      }
      if (data.hasOwnProperty('build_application_commands')) {
        obj['build_application_commands'] = ApiClient.convertToType(data['build_application_commands'], ['String']);
      }
      if (data.hasOwnProperty('build_tool')) {
        obj['build_tool'] = ApiClient.convertToType(data['build_tool'], 'String');
      }
      if (data.hasOwnProperty('build_image_commands')) {
        obj['build_image_commands'] = ApiClient.convertToType(data['build_image_commands'], ['String']);
      }
      if (data.hasOwnProperty('deploy_image_commands')) {
        obj['deploy_image_commands'] = ApiClient.convertToType(data['deploy_image_commands'], ['String']);
      }
      if (data.hasOwnProperty('context_dir')) {
        obj['context_dir'] = ApiClient.convertToType(data['context_dir'], 'String');
      }
      if (data.hasOwnProperty('scm_url')) {
        obj['scm_url'] = ApiClient.convertToType(data['scm_url'], 'String');
      }
      if (data.hasOwnProperty('scm_type')) {
        obj['scm_type'] = ApiClient.convertToType(data['scm_type'], 'String');
      }
      if (data.hasOwnProperty('scm_ref')) {
        obj['scm_ref'] = ApiClient.convertToType(data['scm_ref'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('label_templates')) {
        obj['label_templates'] = ApiClient.convertToType(data['label_templates'], {'String': 'String'});
      }
      if (data.hasOwnProperty('environment_variables_templates')) {
        obj['environment_variables_templates'] = ApiClient.convertToType(data['environment_variables_templates'], {'String': 'String'});
      }
      if (data.hasOwnProperty('pvc_association_templates')) {
        obj['pvc_association_templates'] = ApiClient.convertToType(data['pvc_association_templates'], [PVCAssociationTemplate]);
      }
      if (data.hasOwnProperty('routes')) {
        obj['routes'] = ApiClient.convertToType(data['routes'], [Route]);
      }
    }
    return obj;
  }

  /**
   * @member {Integer} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} base_image
   */
  exports.prototype['base_image'] = undefined;
  /**
   * @member {String} base_image_tag
   */
  exports.prototype['base_image_tag'] = undefined;
  /**
   * @member {Array.<String>} build_application_commands
   */
  exports.prototype['build_application_commands'] = undefined;
  /**
   * @member {module:model/ApplicationTemplate.BuildToolEnum} build_tool
   */
  exports.prototype['build_tool'] = undefined;
  /**
   * @member {Array.<String>} build_image_commands
   */
  exports.prototype['build_image_commands'] = undefined;
  /**
   * @member {Array.<String>} deploy_image_commands
   */
  exports.prototype['deploy_image_commands'] = undefined;
  /**
   * @member {String} context_dir
   */
  exports.prototype['context_dir'] = undefined;
  /**
   * @member {String} scm_url
   */
  exports.prototype['scm_url'] = undefined;
  /**
   * @member {String} scm_type
   */
  exports.prototype['scm_type'] = undefined;
  /**
   * @member {String} scm_ref
   */
  exports.prototype['scm_ref'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Object.<String, String>} label_templates
   */
  exports.prototype['label_templates'] = undefined;
  /**
   * @member {Object.<String, String>} environment_variables_templates
   */
  exports.prototype['environment_variables_templates'] = undefined;
  /**
   * @member {Array.<module:model/PVCAssociationTemplate>} pvc_association_templates
   */
  exports.prototype['pvc_association_templates'] = undefined;
  /**
   * @member {Array.<module:model/Route>} routes
   */
  exports.prototype['routes'] = undefined;


  /**
   * Allowed values for the <code>build_tool</code> property.
   * @enum {String}
   * @readonly
   */
  exports.BuildToolEnum = {
    /**
     * value: "s2i"
     * @const
     */
    "s2i": "s2i",
    /**
     * value: "mvn-3"
     * @const
     */
    "mvn-3": "mvn-3",
    /**
     * value: "node-4"
     * @const
     */
    "node-4": "node-4",
    /**
     * value: "node-0.10"
     * @const
     */
    "node-0.10": "node-0.10",
    /**
     * value: "sh"
     * @const
     */
    "sh": "sh"  };


  return exports;
}));


